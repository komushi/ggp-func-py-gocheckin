conf {
  lambdaLanguage = "PYTHON3_12"
  language = "PYTHON3_7"
  functionName = "py_handler"
  handlerName = "py_handler.function_handler"
  aliasName = "PROD"
  memorySizeInKb = 1048576
  pinned = true
  timeoutInSeconds = 14400
  fromCloudSubscriptions = []
  toCloudSubscriptions = ["gocheckin/"${AWS_IOT_THING_NAME}"/member_detected"]
  inputTopics = ["gocheckin/req_face_embeddings"]
  outputTopics = ["gocheckin/scanner_detected"]
  connectedShadows = []
  environmentVariables {
    DDB_ENDPOINT = "http://localhost:8080"
    TBL_HOST = "gocheckin_host"
    TBL_RESERVATION = "gocheckin_reservation"
    TBL_MEMBER = "gocheckin_member"
    TBL_EQUIPMENT = "gocheckin_equipment"
    IDX_HOST_PROPERTYCODE = "idx_hostPropertyCode",
    IDX_EQUIPMENT_ID = "idx_equipmentId",
    TBL_RECORD = "gocheckin_scan_record"
    COL_FACE_IMG_URL = "faceImgUrl"
    COL_MEMBER_NO = "memberNo",
    LD_PRELOAD = "/usr/lib/arm-linux-gnueabihf/libatomic.so.1"
    MPLCONFIGDIR = "/tmp"
    MAX_RUNNING_TIME = "50"
    INIT_RUNNING_TIME = "30"
    FACE_THRESHOLD = "0.30"
    VIDEO_CLIPPING_LOCATION = "/etc/insightface"
    AWS_ROLE_ALIAS = "Greengrass_CoreRoleAlias"
    VIDEO_BUCKET = "storage-ts-gocheckin-dev-ap-northeast-1"
  }
  coreRoleIamManagedPolicies = [
    "arn:aws:iam::aws:policy/AWSIoTDataAccess"
  ]
  localVolumeResources = [
    {
      resourceName = "insightface",
      sourcePath = "/etc/insightface",
      destinationPath = "/etc/insightface",
      groupOwnerSetting = "true",
      readWrite = true
    }
    {
      resourceName = "certs",
      sourcePath = "/greengrass/certs",
      destinationPath = "/greengrass_certs",
      groupOwnerSetting = "true",
      readWrite = false
    }
  ]
  greengrassContainer = true
}
